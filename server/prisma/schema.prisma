generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Collection {
  id         Int       @id @default(autoincrement())
  title      String
  products   Product[]
  externalId String?   @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("collection")
}

model Product {
  id               Int              @id @default(autoincrement())
  availableForSale Boolean
  title            String
  description      String
  price            Money?           @relation("ProductPrice", fields: [priceId], references: [id])
  priceId          Int?             @unique @default(0)
  collection       Collection       @relation(fields: [collectionId], references: [id])
  collectionId     Int
  featuredImage    Image?           @relation("FeaturedImage", fields: [featuredImageId], references: [id])
  featuredImageId  Int?             @unique
  images           Image[]          @relation("Images")
  characteristics  Characteristic[] @relation("Characterstics")

  cartItems  CartItem[]
  orderItems OrderItem[]

  externalId String? @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("product")
}

model Image {
  id         Int      @id @default(autoincrement())
  fileName   String
  altText    String
  featuredBy Product? @relation("FeaturedImage")
  product    Product  @relation("Images", fields: [productId], references: [id])
  productId  Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("image")
}

model Characteristic {
  id               Int     @id @default(autoincrement())
  availableForSale Boolean
  title            String
  product          Product @relation("Characterstics", fields: [productId], references: [id])
  productId        Int
  price            Money?  @relation("CharacteristicPrice", fields: [priceId], references: [id])
  priceId          Int?    @unique @default(0)

  cartItems  CartItem[]
  orderItems OrderItem[]

  externalId String? @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("characteristic")
}

model Money {
  id             Int             @id @default(autoincrement())
  amount         Int
  currencyCode   String          @default("RUB")
  product        Product?        @relation("ProductPrice")
  characteristic Characteristic? @relation("CharacteristicPrice")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("money")
}

model Cart {
  id    Int        @id @default(autoincrement())
  lines CartItem[]

  @@map("cart")
}

model CartItem {
  id               Int             @id @default(autoincrement())
  quantity         Int
  product          Product         @relation(fields: [productId], references: [id])
  productId        Int
  characteristic   Characteristic? @relation(fields: [characteristicId], references: [id])
  characteristicId Int?

  cart   Cart? @relation(fields: [cartId], references: [id])
  cartId Int?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("cart_item")
}

model Order {
  id          Int    @id @default(autoincrement())
  email       String
  phoneNumber String
  firstName   String
  lastName    String
  patronymic  String
  address     String
  zipCode     String

  lines OrderItem[]

  @@map("order")
}

model OrderItem {
  id               Int             @id @default(autoincrement())
  quantity         Int
  product          Product         @relation(fields: [productId], references: [id])
  productId        Int
  characteristic   Characteristic? @relation(fields: [characteristicId], references: [id])
  characteristicId Int?

  order   Order? @relation(fields: [orderId], references: [id])
  orderId Int?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("order_item")
}
