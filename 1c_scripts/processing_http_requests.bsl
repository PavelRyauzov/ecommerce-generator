#Область ПрограммныйИнтерфейс

Функция ПолучитьДанныеНоменклатуры() Экспорт
	// Необходимые виды товаров по наименованиям
	НаименованияНеобходимыхВидовНоменклатуры = Новый Массив;
	НаименованияНеобходимыхВидовНоменклатуры.Добавить("Кондиционеры");
	НаименованияНеобходимыхВидовНоменклатуры.Добавить("Телевизоры");
	НаименованияНеобходимыхВидовНоменклатуры.Добавить("Холодильники");
	НаименованияНеобходимыхВидовНоменклатуры.Добавить("Электротовары");
	ВидыНоменклатуры = ПолучитьВидыНоменклатурыПоНаименованиям(НаименованияНеобходимыхВидовНоменклатуры);

	// Товары нескольких видов по наименованиям видов номенклатуры
	Номенклатура = ПолучитьНоменклатуруОпределенныхВидов(НаименованияНеобходимыхВидовНоменклатуры);

	// Характеристики товаров по наименованиям видов номенклатуры
	ХарактеристикиНоменклатуры = ПолучитьХарактеристикиНоменклатурыОпределенныхВидов(НаименованияНеобходимыхВидовНоменклатуры);

	// Марки (бренды)
	Марки = ПолучитьМарки();

	// Необходимые склады по наименованиям
	НаименованияНеобходимыхСкладов = Новый Массив;
	НаименованияНеобходимыхСкладов.Добавить("Магазин ""Бытовая техника""");
	НаименованияНеобходимыхСкладов.Добавить("Магазин ""Техника для дома""");
	НаименованияНеобходимыхСкладов.Добавить("Магазин ""Электротовары""");
	Склады = ПолучитьСкладыПоНаименованиям(НаименованияНеобходимыхСкладов);

	// Остатки товаров по складам
	ОстаткиТоваровПоСкладам = ПолучитьОстаткиТоваровПоСкладамПоНаименованиям(НаименованияНеобходимыхСкладов);

	// Цены на товары и характеристики (если имеются)
	ЦеныНоменклатуры = ПолучитьЦеныНоменклатурыОпределенныхВидов(НаименованияНеобходимыхВидовНоменклатуры);

	КорневойОбъект = Новый Структура;
	КорневойОбъект.Вставить("product_type", ВидыНоменклатуры);
	КорневойОбъект.Вставить("product", Номенклатура);
	КорневойОбъект.Вставить("product_characteristic", ХарактеристикиНоменклатуры);
	КорневойОбъект.Вставить("product_brand", Марки);
	КорневойОбъект.Вставить("warehouse", Склады);
	КорневойОбъект.Вставить("stock_balance", ОстаткиТоваровПоСкладам);
	КорневойОбъект.Вставить("product_price", ЦеныНоменклатуры);

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, КорневойОбъект);
	СтрокаJSON = ЗаписьJSON.Закрыть();

	Возврат СтрокаJSON;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьХарактеристикиНоменклатурыОпределенныхВидов(НаименованияВидовНоменклатуры)
	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	| ХарактеристикиНоменклатуры.Ссылка КАК Ссылка,
	| ХарактеристикиНоменклатуры.Владелец КАК Владелец_ВК,
	| ХарактеристикиНоменклатуры.Наименование КАК Наименование,
	| ХарактеристикиНоменклатуры.НаименованиеПолное КАК НаименованиеПолное
	|ИЗ
	| Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ЛЕВОЕ СОЕДИНЕНИЕ
	| Справочник.Номенклатура КАК Номенклатура
	|ПО
	| ХарактеристикиНоменклатуры.Владелец = Номенклатура.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	| Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ПО
	| Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|ГДЕ
	| ВидыНоменклатуры.Наименование = &НаименованиеВидаНоменклатуры";

	ХарактеристикиНоменклатуры = Новый Массив;
	Для Каждого НаименованиеВидаНоменклатуры из НаименованияВидовНоменклатуры Цикл
		Запрос.УстановитьПараметр("НаименованиеВидаНоменклатуры", НаименованиеВидаНоменклатуры);

		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл
			ХарактеристикаТовара = Новый Структура;
			ХарактеристикаТовара.Вставить("external_id", "" + Выборка.Ссылка.УникальныйИдентификатор());
			ХарактеристикаТовара.Вставить("external_product_id", "" + Выборка.Владелец_ВК.УникальныйИдентификатор());
			ХарактеристикаТовара.Вставить("title", Выборка.Наименование);
			ХарактеристикаТовара.Вставить("description", Выборка.НаименованиеПолное);
			ХарактеристикиНоменклатуры.Добавить(ХарактеристикаТовара);
		КонецЦикла;
	КонецЦикла;

	Возврат ХарактеристикиНоменклатуры;
КонецФункции

Функция ПолучитьВидыНоменклатурыПоНаименованиям(НаименованияВидовНоменклатуры)
	Запрос = Новый Запрос;

	ВидыНоменклатуры = Новый Массив;
	Для Каждого НаименованиеВидаНоменклатуры из НаименованияВидовНоменклатуры Цикл
		Запрос.Текст =
		"ВЫБРАТЬ
		| ВидыНоменклатуры.Ссылка КАК Ссылка,
		| ВидыНоменклатуры.Наименование КАК Наименование
		|ИЗ
		| Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|ГДЕ
		| ВидыНоменклатуры.Наименование = &НаименованиеВидаНоменклатуры";
		Запрос.УстановитьПараметр("НаименованиеВидаНоменклатуры", НаименованиеВидаНоменклатуры);

		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий()Цикл
			ВидНоменклатуры = Новый Структура;
			ВидНоменклатуры.Вставить("external_id", "" + Выборка.Ссылка.УникальныйИдентификатор());
			ВидНоменклатуры.Вставить("name", Выборка.Наименование);
	        ВидыНоменклатуры.Добавить(ВидНоменклатуры);
		КонецЦикла;
	КонецЦикла;

	Возврат ВидыНоменклатуры;
КонецФункции

Функция ПолучитьНоменклатуруОпределенныхВидов(НаименованияВидовНоменклатуры)
	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	| Номенклатура.Ссылка КАК Ссылка,
	| Номенклатура.Наименование КАК Наименование,
	| Номенклатура.Артикул КАК Артикул,
	| Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры_ВК,
	| Номенклатура.Марка КАК Марка_ВК
	|ИЗ
	| Справочник.Номенклатура КАК Номенклатура
	|ЛЕВОЕ СОЕДИНЕНИЕ
	| Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ПО
	| Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	| Справочник.ЦеновыеГруппы КАК ЦеновыеГруппы
	|ПО
	| Номенклатура.ЦеноваяГруппа = ЦеновыеГруппы.Ссылка
	|ГДЕ
	| ВидыНоменклатуры.Наименование = &НаименованиеВидаНоменклатуры И ЦеновыеГруппы.Наименование <> ""Некачественные товары""";

	Номенклатура = Новый Массив;
	Для Каждого НаименованиеВидаНоменклатуры из НаименованияВидовНоменклатуры Цикл
		Запрос.УстановитьПараметр("НаименованиеВидаНоменклатуры", НаименованиеВидаНоменклатуры);

		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл
			Товар = Новый Структура;
			Товар.Вставить("external_id", "" + Выборка.Ссылка.УникальныйИдентификатор());
			Товар.Вставить("name", Выборка.Наименование);

			Артикул = Выборка.Артикул;
			Товар.Вставить("vendor_code", ?(ЗначениеЗаполнено(Артикул) И Артикул <> Null, Артикул, Неопределено));

			// Картинки из присоединенных файлов номенклатуры
			Картинки = ПолучитьКартинкиТовара(Выборка.Ссылка);
			Товар.Вставить("img", Картинки);

			ВидНоменклатуры_ВК = Выборка.ВидНоменклатуры_ВК;
			Товар.Вставить("external_type_id", ?(ЗначениеЗаполнено(ВидНоменклатуры_ВК) И ВидНоменклатуры_ВК <> Null, "" + ВидНоменклатуры_ВК.УникальныйИдентификатор(), Неопределено));

			Марка_ВК = Выборка.Марка_ВК;
			Товар.Вставить("external_brand_id", ?(ЗначениеЗаполнено(Марка_ВК) И Марка_ВК <> Null, "" + Марка_ВК.УникальныйИдентификатор(), Неопределено));

			Номенклатура.Добавить(Товар);
		КонецЦикла;
	КонецЦикла;

	Возврат Номенклатура;
КонецФункции

Функция ПолучитьКартинкиТовара(ТоварСсылка)

	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	| НоменклатураПрисоединенныеФайлы.Ссылка КАК ФайлКартинки,
	| НоменклатураПрисоединенныеФайлы.Расширение КАК ФорматФайлаКартинки
	|ИЗ
	| Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|ГДЕ
	| НоменклатураПрисоединенныеФайлы.ВладелецФайла = &ВладелецСсылка";
	Запрос.УстановитьПараметр("ВладелецСсылка", ТоварСсылка);

	Выборка = Запрос.Выполнить().Выбрать();

	МассивКартинки = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Картинка = Новый Структура;
		ФорматФайлаКартинки = Выборка.ФорматФайлаКартинки;
		ФайлКартинки = Выборка.ФайлКартинки;
		Картинка.Вставить("format", ?(ЗначениеЗаполнено(ФорматФайлаКартинки) И ФорматФайлаКартинки <> Null, ФорматФайлаКартинки, ""));
		Картинка.Вставить("base64", ?(ЗначениеЗаполнено(ФайлКартинки) И ФайлКартинки <> Null, ПолучитьКартинку(ФайлКартинки), ""));
		МассивКартинки.Добавить(Картинка);
	КонецЦикла;

	Возврат МассивКартинки;

КонецФункции

&НаСервере
Функция ПолучитьКартинку(СсылкаНаФайл)

	Если ЗначениеЗаполнено(СсылкаНаФайл) Тогда
    	 ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(СсылкаНаФайл);
    	 Возврат Base64Строка(ДвоичныеДанные);
	КонецЕсли;

КонецФункции

Функция ПолучитьМарки()
	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	| Марки.Ссылка КАК Ссылка,
	| Марки.Наименование КАК Наименование
	|ИЗ
	| Справочник.Марки КАК Марки
	|ГДЕ
	| Марки.ЭтоГруппа = Ложь";

	Выборка = Запрос.Выполнить().Выбрать();

	МассивМарки = Новый Массив;
	Пока Выборка.Следующий()Цикл
		Марка = Новый Структура;
		Марка.Вставить("external_id", "" + Выборка.Ссылка.УникальныйИдентификатор());
		Марка.Вставить("name", Выборка.Наименование);
		МассивМарки.Добавить(Марка);
	КонецЦикла;

	Возврат МассивМарки;
КонецФункции

Функция ПолучитьСкладыПоНаименованиям(НаименованияСкладов)
	Запрос = Новый Запрос;

	Склады = Новый Массив;
	Для Каждого НаименованиеСклада из НаименованияСкладов Цикл
		Запрос.Текст =
		"ВЫБРАТЬ
		| Склады.Ссылка КАК Ссылка,
		| Склады.Наименование КАК Наименование
		|ИЗ
		| Справочник.Склады КАК Склады
		|ГДЕ
		| Склады.Наименование = &НаименованиеСклада И Склады.ЭтоГруппа = Ложь";
		Запрос.УстановитьПараметр("НаименованиеСклада", НаименованиеСклада);

		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий()Цикл
			Склад = Новый Структура;
			Склад.Вставить("external_id", "" + Выборка.Ссылка.УникальныйИдентификатор());
			Склад.Вставить("name", Выборка.Наименование);
	        Склады.Добавить(Склад);
		КонецЦикла;
	КонецЦикла;

	Возврат Склады;
КонецФункции

Функция ПолучитьОстаткиТоваровПоСкладамПоНаименованиям(НаименованияСкладов)
	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
 	| СвободныеОстаткиОстатки.Номенклатура КАК Номенклатура,
    | СвободныеОстаткиОстатки.Склад КАК Склад,
 	| СвободныеОстаткиОстатки.ВНаличииОстаток - СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток - СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток КАК ДоступноОстаток
	|ИЗ
 	| РегистрНакопления.СвободныеОстатки.Остатки КАК СвободныеОстаткиОстатки
	|ЛЕВОЕ СОЕДИНЕНИЕ
	| Справочник.Склады КАК Склады
	|ПО
	| СвободныеОстаткиОстатки.Склад = Склады.Ссылка
	|ГДЕ
	| Склады.Наименование = &НаименованиеСклада";

	ОстаткиТоваровПоСкладам = Новый Массив;
	Для Каждого НаименованиеСклада из НаименованияСкладов Цикл
		Запрос.УстановитьПараметр("НаименованиеСклада", НаименованиеСклада);

		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий()Цикл
			ОстатокТовараПоСкладу = Новый Структура;
			ОстатокТовараПоСкладу.Вставить("external_product_id", "" + Выборка.Номенклатура.УникальныйИдентификатор());
			ОстатокТовараПоСкладу.Вставить("external_warehouse_id", "" + Выборка.Склад.УникальныйИдентификатор());
			ОстатокТовараПоСкладу.Вставить("available_balance", Выборка.ДоступноОстаток);
			ОстаткиТоваровПоСкладам.Добавить(ОстатокТовараПоСкладу);
		КонецЦикла;
	КонецЦикла;

	Возврат ОстаткиТоваровПоСкладам;
КонецФункции

Функция ПолучитьЦеныНоменклатурыОпределенныхВидов(НаименованияВидовНоменклатуры)
	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	| ЦеныНоменклатуры.Номенклатура КАК Номенклатура_ВК,
	| ЦеныНоменклатуры.Характеристика КАК ХарактеристикаНоменклатуры_ВК,
	| ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	| ЦеныНоменклатуры.Цена КАК Цена
	|ИЗ
	| РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатуры
	|ЛЕВОЕ СОЕДИНЕНИЕ
	| Справочник.Номенклатура КАК НоменклатураСоединение
	|ПО
	| ЦеныНоменклатуры.Номенклатура = НоменклатураСоединение.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	| Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ПО
	| НоменклатураСоединение.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|ЛЕВОЕ СОЕДИНЕНИЕ
	| Справочник.ВидыЦен КАК ВидыЦен
	|ПО
	| ЦеныНоменклатуры.ВидЦены = ВидыЦен.Ссылка
	|ГДЕ
	| ВидыНоменклатуры.Наименование = &НаименованиеВидаНоменклатуры И ВидыЦен.Наименование = ""Розничная (расчетная)""";

	ЦеныНоменклатуры = Новый Массив;
	Для Каждого НаименованиеВидаНоменклатуры из НаименованияВидовНоменклатуры Цикл
		Запрос.УстановитьПараметр("НаименованиеВидаНоменклатуры", НаименованиеВидаНоменклатуры);

		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий()Цикл
			Цена = Новый Структура;
			ХарактеристикаНоменклатуры_ВК = Выборка.ХарактеристикаНоменклатуры_ВК;
			Цена.Вставить("external_product_id", "" + Выборка.Номенклатура_ВК.УникальныйИдентификатор());
        	Цена.Вставить("external_product_characteristic_id", ?(ЗначениеЗаполнено(ХарактеристикаНоменклатуры_ВК) И ХарактеристикаНоменклатуры_ВК <> Null, "" + ХарактеристикаНоменклатуры_ВК.УникальныйИдентификатор(), Неопределено));
			Цена.Вставить("external_price_type_id", "" + Выборка.ВидЦены.УникальныйИдентификатор());
			Цена.Вставить("price_value", Выборка.Цена);
			ЦеныНоменклатуры.Добавить(Цена);
		КонецЦикла;

	КонецЦикла;

	Возврат ЦеныНоменклатуры;
КонецФункции

#КонецОбласти